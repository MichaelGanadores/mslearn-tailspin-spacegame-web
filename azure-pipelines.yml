trigger:
- '*'

pool:
  vmImage: 'ubuntu-22.04'

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '8.0.x' 

steps:
# Install Node.js 14
- task: NodeTool@0
  displayName: 'Install Node.js 14.x'
  inputs:
    versionSpec: '14.x'
    checkLatest: true
# Downgrade npm to v6
- script: |
    node -v
    npm -v
    npm install -g npm@6
    npm -v
  displayName: 'Downgrade NPM to v6'

# Use .NET SDK 8.x
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    packageType: sdk
    version: '$(dotnetSdkVersion)'

# Run npm install (at repo root; set workingDir if needed)
- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    command: 'install'
    # workingDir: 'Tailspin.SpaceGame.Web'   # uncomment if package.json is there
    verbose: false

# Compile Sass assets with node-sass
- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

# Run gulp tasks
- task: Gulp@1
  displayName: 'Run gulp tasks'
  # inputs:
  #   gulpFile: 'Tailspin.SpaceGame.Web/gulpfile.js'  # set if gulpfile is not at root

# Write build info
- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

# Restore project dependencies
- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()